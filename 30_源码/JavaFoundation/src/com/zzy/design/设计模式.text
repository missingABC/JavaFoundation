设计模式：
面向对象（oop）的六大原则：
1.单一职责原则：一个类只负责一个职责
2.里氏替换原则：任何基类可以出现的地方，子类一定可以出现。或者说所用引用基类的地方必须能透明的使用其子类对象。即子类可以拓展父类的功能，
但是不能改变父类原有的功能。--》子类继承父类的时候，尽量不要重写父类的方法，也不要重载父类的方法
3.依赖倒换原则：要依赖于抽象，不要依赖于具体。通俗讲就是要对抽象进行编程，不要对实现进程编程。-》使用接口或者抽象类的目的是制定好规范和契约，
而不去涉及任何具体的操作，把展现细节的任务交给他们的实现类去完成。
4.接口隔离原则：使用多个隔离的接口比使用单个接口要好。-》一个类对另一个类的依赖应该建立在最小的接口上。（不要被迫实现不必要的方法）
尽量细化接口，接口中的方法尽量少。
5.迪米特法则：一个实体类应该尽量少的与其他实体类发生相互关系。
6.开闭原则：对拓展开放，对修改关闭。=》用抽象构建框架，用实现拓展细节。
	创建型模式
		工厂方法 factoryMethod
		抽象工厂
		建造者模式
		单例模式
		原型模式
	结构型模式
		适配器模式
		桥接模式
		组合模式
		装饰模式
		外观模式
		享元模式
		代理模式
	行为型模式
		责任链模式
		命令模式
		解释器模式
		迭代器模式